<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Xin Zhou Blog</title>
    <link>https://alonsovau.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on Xin Zhou Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 Copyright Zhouxin</copyright>
    <lastBuildDate>Mon, 18 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://alonsovau.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>循环更新字段并自增</title>
      <link>https://alonsovau.github.io/2019/02/%E5%BE%AA%E7%8E%AF%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E5%B9%B6%E8%87%AA%E5%A2%9E/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2019/02/%E5%BE%AA%E7%8E%AF%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E5%B9%B6%E8%87%AA%E5%A2%9E/</guid>
      <description>set @range_id := 90000000; update TB_Category set RangeID = ( select @range_id := @range_id + 1 ) order by Id;</description>
    </item>
    
    <item>
      <title>mysql命令行执行sql语句并输出到log</title>
      <link>https://alonsovau.github.io/2018/07/mysql%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Csql%E8%AF%AD%E5%8F%A5%E5%B9%B6%E8%BE%93%E5%87%BA%E5%88%B0log/</link>
      <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2018/07/mysql%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8Csql%E8%AF%AD%E5%8F%A5%E5%B9%B6%E8%BE%93%E5%87%BA%E5%88%B0log/</guid>
      <description>mysql -uroot -p -f -h172.28.10.83 -P3382 pms_db &amp;lt; Log.sql_2018-07-24_08-59.sql &amp;gt; t.log 2&amp;gt;&amp;amp;1</description>
    </item>
    
    <item>
      <title>Mysql5.7 Linux安装</title>
      <link>https://alonsovau.github.io/2018/05/mysql5.7-linux%E5%AE%89%E8%A3%85/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2018/05/mysql5.7-linux%E5%AE%89%E8%A3%85/</guid>
      <description>rpm -ivh mysql-community-common-5.7.22-1.el7.x86_64.rpm mysql-community-libs-5.7.22-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.22-1.el7.x86_64.rpm mysql-community-server-5.7.22-1.el7.x86_64.rpm mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data/ --initialize service mysqld start grep &amp;#39;temporary password&amp;#39; /var/log/mysqld.log mysql -uroot -p ALTER USER &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;cffEx2016!&amp;#39;; GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;cffEx2016!&amp;#39; WITH GRANT OPTION; 拷贝my.cnf到/etc/目录下 my.cnf 权限为-rw-r--r-- 重启mysql</description>
    </item>
    
    <item>
      <title>MySQL&#43;Keepalived高可用</title>
      <link>https://alonsovau.github.io/2018/04/mysql-keepalived%E9%AB%98%E5%8F%AF%E7%94%A8/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2018/04/mysql-keepalived%E9%AB%98%E5%8F%AF%E7%94%A8/</guid>
      <description>一、结构  简介：
系统主要通过Keepalived+MySQL双主来实现MySQL-HA，我们必须保证两台MySQL数据库的数据完全一样，基本设计是两台MySQL互为主从关系，通过Keepalived配置虚拟IP，实现当其中的一台MySQL数据库宕机后，应用能够自动切换到另外一台MySQL数据库，保证系统的高可用。
 拓扑环境：
 OS: Red Hat Enterprise Linux Server release 7.1 (Maipo)
 MySQL version: 5.5.59-log MySQL Community Server (GPL)
 Keepalived version: keepalived-1.3.5-1.el7.x86_64
 MySQL-Vip: 172.28.10.100
 MySQL-Master1: 172.28.10.82
 MySQL-Master2: 172.28.10.83
  结构图：
  二、 MySQL环境部署  修改MySQL配置文件
以下为master1数据库的my.cnf配置文件内容，目录为/etc/my.cnf，配置完成后重启数据库
[client] port = 3382 socket = /var/lib/mysql/mysql.sock [mysqld] port = 3382 socket = /var/lib/mysql/mysql.sock skip-external-locking key_buffer_size = 16M max_allowed_packet = 1M table_open_cache = 64 sort_buffer_size = 512K net_buffer_length = 8K read_buffer_size = 256K read_rnd_buffer_size = 512K myisam_sort_buffer_size = 8M log-bin=mysql-bin binlog_format=mixed # master2的server-id改为2 server-id = 1 # 要产生log的数据库 binlog-do-db=pms_db # 不产生log的数据库 binlog-ignore-db=mysql # 要复制的数据库 replicate-do-db=pms_db # 不复制的数据库 replicate-ignore-db=mysql log-bin=mysql-bin innodb_data_home_dir = /var/lib/mysql innodb_data_file_path = ibdata1:10M:autoextend innodb_log_group_home_dir = /var/lib/mysql innodb_buffer_pool_size = 16M innodb_additional_mem_pool_size = 2M innodb_log_file_size = 5M innodb_log_buffer_size = 8M innodb_flush_log_at_trx_commit = 1 innodb_lock_wait_timeout = 50 [mysqldump] quick max_allowed_packet = 16M [mysql] no-auto-rehash [myisamchk] key_buffer_size = 20M sort_buffer_size = 20M read_buffer = 2M write_buffer = 2M [mysqlhotcopy] interactive-timeout 将master1设置为master2的主服务器</description>
    </item>
    
    <item>
      <title>cluster</title>
      <link>https://alonsovau.github.io/2018/04/cluster/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2018/04/cluster/</guid>
      <description>https://www.linuxidc.com/Linux/2016-07/133234.htm
 sestatus
 防火墙
   接下来就可以针对这个目录通过一些命令查看配置文件在哪了，如下
/usr/bin/mysql &amp;ndash;verbose &amp;ndash;help | grep -A 1 &amp;lsquo;Default options&amp;rsquo;</description>
    </item>
    
    <item>
      <title>root账户远程登录</title>
      <link>https://alonsovau.github.io/2017/08/root%E8%B4%A6%E6%88%B7%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2017/08/root%E8%B4%A6%E6%88%B7%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/</guid>
      <description> 关闭windows防火墙或者在入站规则添加3306端口
 执行
GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;root&amp;#39; WITH GRANT OPTION; 修改root@%此用户的密码
  </description>
    </item>
    
    <item>
      <title>命令行安装mysql</title>
      <link>https://alonsovau.github.io/2017/08/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2017/08/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85mysql/</guid>
      <description> C:\Program Files\mysql目录下新建my.ini
[mysql] default-character-set=utf8 [mysqld] sql_mode=&amp;#39;NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,PIPES_AS_CONCAT,ANSI_QUOTES&amp;#39; port = 3306 basedir=C:\Program Files\mysql datadir=C:\Program Files\mysql\data max_connections=200 character-set-server=utf8 default-storage-engine=INNODB 进入C:\Program Files\mysql\bin
 执行mysqld &amp;ndash;initialize-insecure （不设置root密码，建议使用）
 执行mysqld -install
 执行net start mysql
 执行mysql -u root -p，回车不输入密码即可进入
 update mysql.user set authentication_string=PASSWORD(&amp;lsquo;wasd123&amp;rsquo;) whereUser=&amp;lsquo;root&amp;rsquo;;
 卸载：net stop mysql,执行mysqld &amp;ndash;remove,删除data文件夹
  </description>
    </item>
    
  </channel>
</rss>