<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wrapper on Xin Zhou Blog</title>
    <link>https://alonsovau.github.io/tags/wrapper/</link>
    <description>Recent content in Wrapper on Xin Zhou Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 Copyright Zhouxin</copyright>
    <lastBuildDate>Mon, 12 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://alonsovau.github.io/tags/wrapper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>装饰器版高速fibonacci</title>
      <link>https://alonsovau.github.io/2018/11/%E8%A3%85%E9%A5%B0%E5%99%A8%E7%89%88%E9%AB%98%E9%80%9Ffibonacci/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alonsovau.github.io/2018/11/%E8%A3%85%E9%A5%B0%E5%99%A8%E7%89%88%E9%AB%98%E9%80%9Ffibonacci/</guid>
      <description>@functools.lru_cache()此行为关键 import time from functools import wraps import functools def clock(func): @wraps(func) def clocked(*args, **kwargs): start = time.time() result = func(*args, **kwargs) elapsed = time.time() - start name = func.__name__ args_list = [] if args: args_list.append(&amp;#39;,&amp;#39;.join(repr(arg) for arg in args)) if kwargs: pairs = [&amp;#39;%s=%r&amp;#39; % (k, w) for k, w in sorted(kwargs.items())] args_list.append(&amp;#39;,&amp;#39;.join(pairs)) args_str = &amp;#39;,&amp;#39;.join(args_list) print(&amp;#39;[%0.8fs] %s(%s) -&amp;gt; %r&amp;#39; % (elapsed, name, args_str, result)) return result return clocked @functools.</description>
    </item>
    
  </channel>
</rss>